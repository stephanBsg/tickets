<h1>Editing Trouble ticket</h1>

<%= render 'form' %>
<div>  
  <%#
   current_user.email %>
</div>

    <script type="text/javascript">


            $(document).ready(function () {








                var rootDir = "http://myladot.lacity.org/arcgis/rest/services/Basemap/MapServer/0/query?where=";
                var $primary = $('#ticket_item_mainstreet');
                var $to = $('#ticket_item_crossingstreet');
                var $end = $('#ticket_item_intersectionnum');
                item = null;
                var from_street = null;
                var to_street = null;


                function onSourceError(err) {
                    console.error('Error - bad query: ', err);
                }

                function onSourceSuccess(response, origin) {
                    return function (results) {
                        // console.log('results', results);

                        //                        if (results.message) {
                        //                            alert(results.message);
                        //                            return;
                        //                        }
                        console.log("origin=" + origin);
                        console.log(results);
                        var obj = jQuery.parseJSON(results);
                        var res = obj.features;
                        items = $.map(res, function (values) {
                            if (origin == "from")
                                return { label: values.attributes.FROM_ST, value: values.attributes.FROM_ST };
                            else if (origin == "to") {
                                return { label: values.attributes.TO_ST, value: values.attributes.TO_ST, id: values.attributes.DOT_ID };
                            }
                            else if (origin == "inter")
                                return { label: values.attributes.DOT_ID, value: values.attributes.DOT_ID };
                        });
                            if (origin == "from" || origin=="inter")
				response($.distinctObj(items,'label'));
			   else	{
			   /*
			   items = $.map(items, function (item, index) {
   			 if (items.label) return null; // Removes the first 10 elements;
			    return item;
				});*/
				items=uniqBy(items, JSON.stringify);
  				response(items);
  				}
			
                    };
                }
                      //  response($.distinct(items));

		$.extend({
			distinctObj:function(obj,propertyName) {
			    var result = [];
			    $.each(obj,function(i,v){
				var prop=eval("v."+propertyName);
				if ($.inArray(prop, result) == -1) result.push(prop);
			    });
			    return result;
			}
		    });	

		uniqBy = function(ary, key) {
		    var seen = {};
		    return ary.filter(function(elem) {
			var k = key(elem);
			return (seen[k] === 1) ? 0 : seen[k] = 1;
		    })
		}    	
                function fromSource(request, response) {
                    var search = encodeURIComponent(request.term);
                    console.log('SEARCH REQUEST: ', request);

                    $.ajax({
                        url: rootDir + "FROM_ST+LIKE+%27" + search + "%25%27&&returnGeometry=false&outFields=FROM_ST,TO_ST,DOT_ID&f=json",
                        success: onSourceSuccess(response, "from"),
                        error: onSourceError
                    })
                }

                function toSource(request, response) {
                    var search = encodeURIComponent(request.term);
                    $to.focus();
                    if (from_street !== null) {
                        //alert(rootDir + "FROM_ST+%3D%27" + from_street + "%27&TO_ST%3D+%27" + encodeURIComponent(request.term) + "%25%27&&returnGeometry=false&outFields=FROM_ST,TO_ST,DOT_ID&f=json");
                        $.ajax({
                            url: rootDir + "FROM_ST+%3D%27" + from_street + "%27&TO_ST%3D+%27" + search + "%25%27&&returnGeometry=false&outFields=FROM_ST,TO_ST,DOT_ID&f=json",
                            success: onSourceSuccess(response, "to"),
                            error: onSourceError
                        })
                    } else {
                    	$primary.val('');
                        $to.val('');
                        $end.val('');
                        alert("Can't choose Cross Street without Primary");
                    }
                }

                function endSource(request, response) {
                    var search = encodeURIComponent(request.term);
                    //$end.focus();
                    console.log('SEARCH END: ', search);

                    if (from_street !== null && to_street != null) {
                        $.ajax({
                            url: rootDir + "FROM_ST+%3D%27" + from_street + "%27&TO_ST%3D+%27" + to_street + "%27&&returnGeometry=false&outFields=FROM_ST,TO_ST,DOT_ID&f=json",
                            /*url: rootDir + "Intersection/GetEnd?fromStreet=" + from_street + "&toStreet=" + to_street + "&search=" + search,*/
                            success: onSourceSuccess(response),
                            error: onSourceError
                        })
                    } else {
                        $to.val('');
                        $end.val('');
                        alert("Can't choose EOB Street without Primary");
                    }
                }

                function fromSelected(e, obj) {
                    console.log('from selected event', e);
                    console.log('from selected object', obj);
                    from_street = encodeURIComponent(obj.item.value);
                    console.log('from street', from_street);
                    $to.val('');
                    $to.autocomplete('search', '');
                }

                function toSelected(e, obj) {
                    console.log('to selected event', e);
                    console.log('to selected object', obj);
                    console.log('from street', from_street);
                    to_street = encodeURIComponent(obj.item.value);

		    $end=$("#ticket_item_intersectionnum");
                    $end.val(obj.item.id);
                    //alert(obj.item.id);
                    //$end = obj.item.id;
                    //$("#ticket_item_intersectionnum").val(obj.item.id);
                }


                $primary.autocomplete({
                    minLength: 3,
                    source: fromSource,
                    select: fromSelected,
                    change: function (event, ui) {
                        if (!ui.item) {
                            // The item selected from the menu, if any. Otherwise the property is null
                            //so clear the item for force selection                    
                            $(event.target).val('');
                            $to.val('');
                            $end.val('');
                        }
                    }
                });

                $to.autocomplete({
                    minLength: 0,
                    source: toSource,
                    select: toSelected,
                    change: function (event, ui) {
                        if (!ui.item) {
                            // The item selected from the menu, if any. Otherwise the property is null
                            //so clear the item for force selection                       
                            $(event.target).val('');
                            $end.val('');
                        }
                    }
                });



            });







    </script>
    <style>
.editor-field 
{
    float:left;
    width:auto;
    padding-right:5px;
    }
.editor-label 
{
    float:left;
    padding-right:5px;
    } 
.text-box 
{
    width:60px;
    }
input[type="text"] 
{
    width:90px;
    }    
fieldset {    
border: 1px solid #ddd;
/* padding: 0 1.4em 1.4em 1.4em; */
margin: 0;
}
#closureDescription
{
    width: 683px;
    }
#closureMainStreet
{
    width: 200px;
    }
#closureFromStreet
{
    width: 200px;
    }
#closureToStreet
{
    width: 200px;
    }    
</style>

<%= link_to 'Show', @ticket_item %> |
<%= link_to 'Back', ticket_items_path %>
